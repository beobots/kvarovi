permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
name: test
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [stable]
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust Toolchain Components
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: ${{ matrix.toolchain }}

      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile

      - uses: Swatinem/rust-cache@v2

      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets

  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust Toolchain Components
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: nightly

      - name: Run tests
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        run: cargo test --verbose

      - name: Run grcov
        uses: actions-rs/grcov@v0.1.6

      - name: Upload report to codecov
        # You may pin to the exact commit or the version.
        # uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
        uses: codecov/codecov-action@v3.1.0
        with:
          # Repository upload token - get it from codecov.io. Required only for private repositories
          # token: # optional
          # Specify whether the Codecov output should be verbose
          verbose: true
          fail_ci_if_error: true